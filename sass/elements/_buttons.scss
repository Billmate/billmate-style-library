/**
 * Buttons
 */


/*
---
name: Button
category: Components
---

Buttons can be used with `<a>`, `<button>`, and `<input>` elements.

Types of buttons:
- Rectangle Primary: Standard button
- Rectangle Secondary: Add an secondary indication over the primary button
- Rectangle Tertiary: Add an tertiary indication over the other button types

```types.html
<button class="button rectanglePrimary">Rectangle Primary</button>
<button class="button rectanglePrimary mediumLabel">Rectangle Primary - medium button</button>
<button class="button rectanglePrimary smallLabel">Rectangle Primary - small button</button>
<button class="button rectangleSecondary">Rectangle Secondary</button>
<button class="button rectangleTertiary">Rectangle Tertiary</button>
```
*/

button,
input[type=button],
input[type=submit],
a {
  @extend .is-large;

  height: 56px;

  /**
   * Rectangle
   */
  // Rectangle Primary
  &.rectanglePrimary {
    @extend .is-fullwidth;
    @extend .labelLarge;
    @extend .backgroundInversePrimary;

    color: $white;
    border: 0;

    // Medium button
    &.mediumLabel {
      @extend .labelMedium;
    }

    // Small button
    &.smallLabel {
      @extend .labelSmall;
    }

    &:disabled {
      @extend .backgroundStateDisabled;
      @extend .contentStateDisabled;

      pointer-events: none;
    }

    &:hover {
      opacity: 0.8;
      color: $white;
    }

    &:active {
      opacity: 0.7;
      color: $white;
    }

    &:enabled {
      color: $white;
    }
  }

  // Rectangle Secondary
  &.rectangleSecondary {
    @extend .is-fullwidth;
    @extend .labelLarge;
    @extend .backgroundTertiary;
    @extend .contentPrimary;

    border: 0;

    // Medium button
    &.mediumLabel {
      @extend .labelMedium;
    }

    // Small button
    &.smallLabel {
      @extend .labelSmall;
    }

    &:disabled {
      @extend .backgroundStateDisabled;
      @extend .contentStateDisabled;

      pointer-events: none;
    }

    &:hover {
      @extend .contentPrimary;

      opacity: 0.82;
    }

    &:active {
      @extend .contentPrimary;

      opacity: 0.7;
    }

    &:enabled {
      @extend .contentPrimary;
    }
  }

  // Rectangle Tertiary
  &.rectangleTertiary {
    @extend .is-fullwidth;
    @extend .labelLarge;

    border: 0;

    // Medium button
    &.mediumLabel {
      @extend .labelMedium;
    }

    // Small button
    &.smallLabel {
      @extend .labelSmall;
    }

    &:disabled {
      @extend .contentStateDisabled;

      pointer-events: none;
    }

    &:hover {
      @extend .backgroundTertiary;
      @extend .contentPrimary;

      opacity: 0.82;
    }

    &:active {
      @extend .backgroundTertiary;
      @extend .contentPrimary;

      opacity: 0.7;
    }

    &:enabled {
      @extend .contentPrimary;
    }
  }

  /**
   * Pill
   */
  // Pill Primary
  &.pillPrimary {
    @extend .rectanglePrimary;

    width: auto !important;
    border-radius: 100px;
  }

  // Pill Secondary
  &.pillSecondary {
    @extend .rectangleSecondary;

    width: auto !important;
    border-radius: 100px;
  }

  // Pill Tertiary
  &.pillTertiary {
    @extend .rectangleTertiary;

    width: auto !important;
    border-radius: 100px;
  }
}
