/*
---
name: Input
category: Components
---

Input can be used with `<input>`, `<textarea>`, and `<select>` other form based elements.

Types of inputs:
- Standard input: Standard input without any accent
- Positive input: Input with positive accent
- Negative input: Input with negative accent

```types.html
<div class="control has-icons-left">
<label class="label">With label</label>
  <input type="text" class="input" placeholder="Placeholder text" />
    <span class="icon is-small is-left">
    <i class="bm-icon-placeholder contentPrimary"></i>
  </span>
  <span class="hint">Hint goes here</span>
</div>
<div class="control has-icons-left has-icons-right">
  <input type="text" class="input" placeholder="Placeholder text" />
    <span class="icon is-small is-left">
    <i class="bm-icon-placeholder contentPrimary"></i>
  </span>
  <span class="icon is-small is-right">
    <i class="bm-icon-check contentPositive"></i>
  </span>
  <span class="hint">Hint goes here</span>
</div>


<div class="control has-icons-right">
  <input type="text" class="input" value="Positive input" />
  <span class="icon is-small is-right">
    <i class="bm-icon-check contentPositive"></i>
  </span>
</div>

<div class="control has-icons-right">
  <input type="text" class="input borderNegative contentNegative" value="Negative input" />
  <span class="icon is-small is-right">
    <i class="bm-icon-alert contentNegative"></i>
  </span>
</div>


<div class="control has-icons-right">
<label class="label">With label</label>
  <input type="text" class="input borderNegative" disabled value="Negative input" />
  <span class="icon is-small is-right">
    <i class="bm-icon-alert contentStateDisabled"></i>
  </span>
</div>

<div class="control has-icons-right">
<label class="label">Rounded</label>
  <input type="text" class="input rounded" value="Negative input" />
  <span class="icon is-small is-right">
    <i class="bm-icon-alert contentStateDisabled"></i>
  </span>
</div>

<div class="control has-icons-left has-icons-right rounded">
<label class="label">Rounded</label>
  <input type="text" class="input rounded" value="Negative input" />
    <span class="icon is-small is-left">
    <i class="bm-icon-placeholder contentPrimary"></i>
  </span>
  <span class="icon is-small is-right">
    <i class="bm-icon-alert contentStateDisabled"></i>
  </span>
</div>
```
```types.css hidden
.control {
margin-bottom: 20px;
}
```
*/

.control {
  label {
    @extend .labelMedium;
  }
}

.control.has-icons-left .input {
  padding-left: calc(17.75px + 42px);
}

.control.has-icons-left .input[type=text] ~ .icon {
  font-size: 1.57rem;
}

.control.has-icons-right .input[type=text] ~ .icon {
  font-size: 1.57rem;
}

.control.has-icons-left .icon, .control.has-icons-right .icon {
  width: 2.61em;
}

.control.has-icons-left {
  .icon {
    //top: auto;
  }

  input {
    &:focus {
      padding-left: calc(17.75px + 42px - 1px);
    }
  }
}

.control.has-icons-right {
  .icon {
    //top: auto;
  }
  input {
    &:focus {
      padding-right: calc(17.75px + 40px - 1px);
    }
  }
}


.control {
  .hint {
    @extend .help;
  }
}

.input[type=text],
.input[type=password],
.input[type=email],
.bm-input {
  @extend .is-large;
  @extend .contentTertiary;

  height: 64px;
  font-size: 18px;
  box-shadow: none;


  &:focus,
  &:active {
    @extend .contentPrimary;

    background-color: $white;
    border: 2px solid $grey900;
    box-shadow: none;
  }

  &:enabled {
    color: $black;

    &.contentNegative {
      color: $red500;
    }
  }

  &:disabled {
    @extend :disabled;
    @extend .backgroundPrimary;
    @extend .borderStateDisabled;
    box-shadow: none;

    &:enabled,
    &:focus,
    &:active {
      @extend .borderStateDisabled;
      @extend .contentTertiary;
    }
  }

  &::placeholder {
    @extend .contentSecondary;
  }

  // Pill Primary
  &.rounded {
    border-radius: 100px;
  }
}

.control {
  .input {
    padding-left: 17.75px;

    &.rounded {
      padding-left: calc(17.75px + 10px);

      &:focus {
        padding-left: calc(17.75px - 1px + 10px);
      }
    }

    &:focus {
      padding-left: calc(17.75px - 1px);
    }
  }
  &.has-icons-left {
    &.rounded {
      .icon {
        width: 3em;
      }
    }
    .input {
      &.rounded {
        padding-left: calc(17.75px + 42px);

        &:focus {
          padding-left: calc(17.75px - 1px + 42px);
        }
      }
    }
  }
}

/*
---
name: Input - hint helpers
category: Components
---

Hin helpers can be used with `<p>` in structure with field class.

```types.html
<div class="control">
  <input type="text" class="input" value="Positive input" />
  <span class="hint is-success">Hint goes here</span>
</div>

<div class="control">
  <input type="text" class="input" value="Standard input" />
  <span class="hint is-danger">Hint goes here</span>
</div>

```
```types.css hidden
.control {
margin-bottom: 20px;
}
```
*/
.field {
  .help {
    @extend .labelSmall;
    @extend .contentTertiary;

    &.is-success {
      @extend .contentPositive;
    }

    &.is-danger {
      @extend .contentNegative;
    }
  }
}
