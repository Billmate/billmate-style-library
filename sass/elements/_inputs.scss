/*
---
name: Input
category: Components
---

Input can be used with `<input>`, `<textarea>`, and `<select>` other form based elements.

Types of inputs:
- Standard input: Standard input without any accent
- Positive input: Input with positive accent
- Negative input: Input with negative accent

```types.html
<input type="text" class="input" placeholder="Placeholder text" />
<input type="text" class="input" value="Standard input" />
<div class="control has-icons-right">
  <input type="text" class="input positive" value="Positive input" />
  <span class="icon is-small is-right">
    <i class="bm-icon-check contentPositive"></i>
  </span>
</div>
<div class="control has-icons-right">
  <input type="text" class="input negative" value="Negative input" />
  <span class="icon is-small is-right">
    <i class="bm-icon-alert contentNegative"></i>
  </span>
</div>
<input type="text" class="input" disabled value="Standard input" />
```
*/
.input[type=text],
.input[type=password],
.input[type=email] {
  @extend .is-large;
  @extend .backgroundTertiary;
  @extend .contentTertiary;

  border: 0;
  border-radius: 0;
  height: 56px;
  font-size: 18px;
  box-shadow: none;

  &:focus,
  &:active {
    @extend .contentPrimary;

    background-color: $white;
    border: 2px solid $black;
    box-shadow: none;
  }

  &:enabled {
    color: $black;
  }

  &:disabled {
    @extend .backgroundTertiary;

    border: 0;
    border-radius: 0;
    box-shadow: none;

    &:enabled,
    &:focus,
    &:active {
      @extend .backgroundTertiary;
      @extend .contentTertiary;
    }
  }

  &::placeholder {
    @extend .contentSecondary;
  }

  // Positive
  &.positive {
    @extend .backgroundLightPositive;

    border-bottom: 2px solid $green400;

    &:focus,
    &:active {
      border-top: 2px solid transparent;
      border-left: 2px solid transparent;
      border-right: 2px solid transparent;
    }
  }

  // Negative
  &.negative {
    @extend .backgroundLightNegative;

    border-bottom: 2px solid $red400;

    &:focus,
    &:active {
      border-top: 2px solid transparent;
      border-left: 2px solid transparent;
      border-right: 2px solid transparent;
    }
  }
}

/*
---
name: Input - hint helpers
category: Components
---

Hin helpers can be used with `<p>` in structure with field class.

```types.html
<div class="field">
  <input type="text" class="input" value="Standard input" />
  <p class="help is-success">Helper success</p>
</div>
<div class="field">
  <input type="text" class="input" value="Standard input" />
  <p class="help is-danger">Helper danger</p>
</div>
```
*/
.field {
  .help {
    @extend .labelSmall;
    @extend .contentTertiary;

    &.is-success {
      @extend .contentPositive;
    }

    &.is-danger {
      @extend .contentNegative;
    }
  }
}
