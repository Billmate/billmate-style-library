/*
---
name: Switch
category: Components
---

Switch can be used with `<input>` elements.

```types.html
<div class="field">
  <input id="switchExample" type="checkbox" name="switchExample" class="switch" checked="checked">
  <label for="switchExample">Switch example</label>
</div>
```
*/
.switch[type='checkbox'] {
  @extend .is-large;
  @extend .is-rounded;

  &[type='checkbox'] + label {
    @extend .paragraphSmall;
  }

  // Active state
  & + label {
    &::before,
    &:before {
      @extend .backgroundInversePrimary;
    }
  }

  // Disabled state
  &:checked + label:before,
  &:checked[type='checkbox'] + label:before {
    @extend .backgroundInversePrimary;

    background-color: $black;
    border: 0;
  }
}

/*
---
name: Check
category: Components
---

Check can be used with `<input>` elements.

```types.html
<div class="field">
  <input id="checkExample" type="checkbox" name="checkExample" class="is-checkradio">
  <label for="checkExample">Check example</label>
</div>
```
*/
.is-checkradio[type='checkbox'] {
  @extend .primaryA;

  border: 0;

  // Active state
  & + label {
    &::before,
    &:before {
      // contentTertiary
      @extend .backgroundInversePrimary;

      border-radius: 0;
      border: 0;
    }

    // Disabled state
    &::after,
    &:after {
      border-color: $white;
    }
  }

  // Hover state
  &:hover:not([disabled]) + label {
    &:before,
    &::before {
      border: 0;
    }
  }

  // Checked
  &:checked {
    & + label {
      &:before,
      &::before {
        border: 0;
      }
    }
  }
}

/*
---
name: Radio
category: Components
---

Radio can be used with `<input>` elements.

```types.html
<div class="field">
  <input id="radioExample" type="radio" name="radioExample" class="is-checkradio">
  <label for="radioExample">Radio example</label>
</div>
```
*/
.is-checkradio[type='radio'] {
  @extend .primaryA;

  // Active state
  & + label {
    &::before,
    &:before {
      @extend .backgroundInversePrimary;
    }

    // Disabled state
    &::after,
    &:after {
      background-color: $white;
    }
  }

  // Hover state
  &:hover:not([disabled]) + label {
    &:before,
    &::before {
      border: 0;
    }
  }
}
